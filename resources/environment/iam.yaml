AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  ProjectName:
    Description: "Project name"
    Type: "String"
  Environment:
    Description: "Server environment"
    Type: "String"
    AllowedValues:
      - "dev"
      - "test"
      - "prod"
  LocalDevUserARN:
    Type: "String"

Conditions:
  IsDevEnv: !Equals ["dev", !Ref "Environment"]
  IsTestOrProdEnv: !Or
    - !Equals ["prod", !Ref "Environment"]
    - !Equals ["test", !Ref "Environment"]

Resources:
  EBRole:
    Type: "AWS::IAM::Role"
    Condition: "IsTestOrProdEnv"
    Properties:
      RoleName: !Sub "${ProjectName}-${Environment}-eb-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
        - "arn:aws:iam::aws:policy/AWSElasticBeanstalkWebTier"
        - "arn:aws:iam::aws:policy/AWSElasticBeanstalkMulticontainerDocker"
        - "arn:aws:iam::aws:policy/AWSElasticBeanstalkWorkerTier"
        - "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"

  DevRole:
    Type: "AWS::IAM::Role"
    Condition: "IsDevEnv"
    Properties:
      RoleName: !Sub "${ProjectName}-dev-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              AWS:
                - !Ref "LocalDevUserARN"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"

Outputs:
  ConsumerRoleName:
    Value: !If ["IsDevEnv", !Ref "DevRole", !Ref "EBRole"]
  ConsumerRoleARN:
    Value: !If ["IsDevEnv", !GetAtt "DevRole.Arn", !GetAtt "EBRole.Arn"]