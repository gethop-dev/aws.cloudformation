AWSTemplateFormatVersion: "2010-09-09"
Description: "Cloudformation template for setting up a new AWS project environment"

Parameters:
  TemplateBucketURL:
    Description: "URL of the bucket used for storing Cloudformation templates"
    Type: "String"
  ProjectName:
    Description: "Project name"
    Type: "String"
  Environment:
    Description: "Project name"
    Type: "String"
    AllowedValues:
      - "dev"
  LocalDevUserARN:
    Type: "String"
  CloudwatchLogGroupName:
    Description: "Cloudwatch Log group name"
    Type: "String"
    Default: ""
  CloudwatchLogRetentionDays:
    Description: "Cloudwatch Log retention days"
    Type: "Number"
    Default: 1
  IncludeCognito:
    Type: "String"
    Default: "false"
  IncludeS3:
    Type: "String"
    Default: "false"
  IncludeCloudwatch:
    Type: "String"
    Default: "false"

Conditions:
  IncludeCognitoCond: !Equals ["true", !Ref "IncludeCognito"]
  IncludeS3Cond: !Equals ["true", !Ref "IncludeS3"]
  IncludeCloudwatchCond: !Equals ["true", !Ref "IncludeCloudwatch"]

Resources:
  Cognito:
    Type: "AWS::CloudFormation::Stack"
    Condition: "IncludeCognitoCond"
    Properties:
      TemplateURL: !Sub "${TemplateBucketURL}/environment/cognito.yaml"
      Parameters:
        ProjectName: !Ref "ProjectName"
        Environment: !Ref "Environment"
        ConsumerRoleName: !GetAtt "IAM.Outputs.ConsumerRoleName"
  S3:
    Type: "AWS::CloudFormation::Stack"
    Condition: "IncludeS3Cond"
    Properties:
      TemplateURL: !Sub "${TemplateBucketURL}/environment/s3.yaml"
      Parameters:
        ProjectName: !Ref "ProjectName"
        Environment: !Ref "Environment"
        ConsumerRoleName: !GetAtt "IAM.Outputs.ConsumerRoleName"
  IAM:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: !Sub "${TemplateBucketURL}/environment/local-iam.yaml"
      Parameters:
        ProjectName: !Ref "ProjectName"
        Environment: !Ref "Environment"
        LocalDevUserARN: !Ref "LocalDevUserARN"
  SSM:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: !Sub "${TemplateBucketURL}/environment/iam-ssm.yaml"
      Parameters:
        ProjectName: !Ref "ProjectName"
        Environment: !Ref "Environment"
        ConsumerRoleName: !GetAtt "IAM.Outputs.ConsumerRoleName"
  KMS:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: !Sub "${TemplateBucketURL}/environment/kms.yaml"
      Parameters:
        ProjectName: !Ref "ProjectName"
        Environment: !Ref "Environment"
        ConsumerRoleARN: !GetAtt "IAM.Outputs.ConsumerRoleARN"
  Cloudwatch:
    Type: "AWS::CloudFormation::Stack"
    Condition: "IncludeCloudwatchCond"
    Properties:
      TemplateURL: !Sub "${TemplateBucketURL}/environment/cloudwatch.yaml"
      Parameters:
        ProjectName: !Ref "ProjectName"
        Environment: !Ref "Environment"
        ConsumerRoleName: !GetAtt "IAM.Outputs.ConsumerRoleName"
        LogGroupName: !Ref "CloudwatchLogGroupName"
        LogRetentionDays: !Ref "CloudwatchLogRetentionDays"

Outputs:
  CognitoUserPoolId:
    Condition: "IncludeCognitoCond"
    Value: !GetAtt "Cognito.Outputs.UserPoolId"
  CognitoUserPoolURL:
    Condition: "IncludeCognitoCond"
    Value: !GetAtt "Cognito.Outputs.UserPoolURL"
  CognitoSPAClientId:
    Condition: "IncludeCognitoCond"
    Value: !GetAtt "Cognito.Outputs.UserPoolSPAClientId"
  KmsKeyAlias:
    Value: !GetAtt "KMS.Outputs.KmsKeyAlias"
  S3BucketName:
    Condition: "IncludeS3Cond"
    Value: !GetAtt "S3.Outputs.BucketName"
  CloudwatchLogGroupName:
    Condition: "IncludeCloudwatchCond"
    Value: !GetAtt "Cloudwatch.Outputs.LogGroupName"
  DevRoleArn:
    Value: !GetAtt "IAM.Outputs.ConsumerRoleARN"
