AWSTemplateFormatVersion: "2010-09-09"
Description: "IAM Roles"
Parameters:
  ProjectName:
    Description: "Project name"
    Type: "String"
  Environment:
    Description: "Server environment"
    Type: "String"
    AllowedValues:
      - "dev"
      - "test"
      - "prod"
  S3PolicyARN:
    Description: "IAM Policy for S3"
    Type: "String"
  CognitoPolicyARN:
    Description: "IAM Policy for Cognito"
    Type: "String"

Conditions:
  IsDevEnv: !Equals ["dev", !Ref "Environment"]
  IsTestOrProdEnv: !Or
    - !Equals ["prod", !Ref "Environment"]
    - !Equals ["test", !Ref "Environment"]

Resources:
  LocalDevUser:
    Type: "AWS::IAM::User"
    Condition: "IsDevEnv"
    Properties:
      UserName: "local-dev"

  LocalDevUserAccessKey:
    Type: "AWS::IAM::AccessKey"
    Condition: "IsDevEnv"
    Properties:
      Status: "Active"
      UserName: !Ref "LocalDevUser"

  DevRole:
    Type: "AWS::IAM::Role"
    Condition: "IsDevEnv"
    Properties:
      RoleName: !Sub "${ProjectName}-${Environment}-elb-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              AWS:
                - !GetAtt "LocalDevUser.Arn"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - !Ref "S3PolicyARN"
        - !Ref "CognitoPolicyARN"
        - "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"

  ELBRole:
    Type: "AWS::IAM::Role"
    Condition: "IsTestOrProdEnv"
    Properties:
      RoleName: !Sub "${ProjectName}-${Environment}-elb-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - !Ref "S3PolicyARN"
        - !Ref "CognitoPolicyARN"
        - "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
        - "arn:aws:iam::aws:policy/AWSElasticBeanstalkWebTier"
        - "arn:aws:iam::aws:policy/AWSElasticBeanstalkMulticontainerDocker"
        - "arn:aws:iam::aws:policy/AWSElasticBeanstalkWorkerTier"
# TODO: We need to check if we can output these secrets to a file
# after the stack is created.
Outputs:
  LocalDevUserAccessKeyID:
    Condition: "IsDevEnv"
    Value: !Ref "LocalDevUserAccessKey"
  LocalDevUserAccessKeySecret:
    Condition: "IsDevEnv"
    Value: !GetAtt "LocalDevUserAccessKey.SecretAccessKey"
